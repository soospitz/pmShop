{"ast":null,"code":"var _jsxFileName = \"/Users/soospitz/Documents/React/pmShop/src/App.js\";\nimport React, { Component, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport Nav from \"./components/Nav\";\nimport About from \"./components/About\";\nimport Cart from \"./components/Cart\";\nimport itemData from \"./components/ItemData\";\nimport { prices } from \"./constants/Prices\";\n\nconst App = () => {\n  const [cart, setCart] = useState([]);\n  const [tagVisible, setTagVisible] = useState(\"all\");\n  const [state, setState] = useState({\n    itemData\n  });\n  console.log(state, \"state\");\n\n  const handleTag = event => {\n    setTagVisible(event.target.value);\n  };\n\n  const changeSize = id => event => {\n    console.log(event.target.value);\n    let copyItems = [];\n    state.items.forEach(item => {\n      let copyItem = { ...item\n      };\n\n      if (item.id === id) {\n        copyItem.size = event.target.value;\n      }\n\n      console.log(\"copyItem\", copyItem);\n      copyItems.push(copyItem);\n    });\n    setState({ ...state,\n      items: copyItems\n    });\n  };\n\n  const changeQuantity = id => event => {\n    console.log(event.target.value);\n    let copyItems = [];\n    state.items.forEach(item => {\n      let copyItem = { ...item\n      };\n\n      if (item.id === id) {\n        copyItem.quantity = parseInt(event.target.value);\n      }\n\n      console.log(\"copyItem\", copyItem);\n      copyItems.push(copyItem);\n    });\n    setState({ ...state,\n      items: copyItems\n    });\n  };\n\n  const addToCart = id => () => {\n    let newShoppingCart = [];\n    let itemToAdd = {};\n    state.items.forEach(item => {\n      if (item.id === id) {\n        itemToAdd = item;\n      }\n    });\n    let isExistingItemInCart = false;\n    cart.forEach(item => {\n      if (item.id === itemToAdd.id && item.size === itemToAdd.size) {\n        itemToAdd.quantity = item.quantity + itemToAdd.quantity;\n        newShoppingCart.push(itemToAdd);\n        isExistingItemInCart = true;\n      } else {\n        newShoppingCart.push(item);\n      }\n    });\n\n    if (!isExistingItemInCart) {\n      newShoppingCart.push(itemToAdd);\n    }\n\n    let copyItems = [];\n    state.items.forEach(item => {\n      let copyItem = { ...item\n      };\n\n      if (item.id === id) {\n        copyItem.size = \"\";\n        copyItem.quantity = 0;\n      }\n\n      copyItems.push(copyItem);\n    });\n    setState({ ...state,\n      items: copyItems\n    });\n    setCart(newShoppingCart);\n  };\n\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  const getSubtotal = () => {\n    let subtotal = 0;\n    cart.forEach(item => {\n      subtotal = subtotal + item.quantity * prices[item.name];\n    });\n    return subtotal;\n  }; //want to get total quantity for total item in cart\n\n\n  const getTotalQuantity = () => {\n    let totalQuantity = 0;\n    cart.forEach(item => {\n      totalQuantity = item.quantity + totalQuantity;\n    });\n    return totalQuantity;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    render: () => /*#__PURE__*/React.createElement(Nav, {\n      getTotalQuantity: getTotalQuantity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    render: () => /*#__PURE__*/React.createElement(Home, {\n      listOfItems: state.items,\n      tagVisible: tagVisible,\n      handleTag: handleTag,\n      changeSize: changeSize,\n      changeQuantity: changeQuantity,\n      addToCart: addToCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/about\",\n    component: About,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/cart\",\n    exact: true,\n    render: () => /*#__PURE__*/React.createElement(Cart, {\n      cart: cart,\n      cartLength: cart.length,\n      getSubtotal: getSubtotal,\n      getTotalQuantity: getTotalQuantity,\n      clearCart: clearCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/soospitz/Documents/React/pmShop/src/App.js"],"names":["React","Component","useState","BrowserRouter","Router","Route","Link","Switch","Home","Nav","About","Cart","itemData","prices","App","cart","setCart","tagVisible","setTagVisible","state","setState","console","log","handleTag","event","target","value","changeSize","id","copyItems","items","forEach","item","copyItem","size","push","changeQuantity","quantity","parseInt","addToCart","newShoppingCart","itemToAdd","isExistingItemInCart","clearCart","getSubtotal","subtotal","name","getTotalQuantity","totalQuantity","length"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport Nav from \"./components/Nav\";\nimport About from \"./components/About\";\nimport Cart from \"./components/Cart\";\nimport itemData from \"./components/ItemData\"\nimport { prices } from \"./constants/Prices\";\n\nconst App = () => {\n  const [cart, setCart] = useState([]);\n  const [tagVisible, setTagVisible] = useState(\"all\");\n  const [state, setState] = useState({itemData});\n  console.log(state, \"state\");\n  const handleTag = (event) => {\n    setTagVisible(event.target.value);\n  };\n\n  const changeSize = (id) => (event) => {\n    console.log(event.target.value);\n    let copyItems = [];\n    state.items.forEach((item) => {\n      let copyItem = { ...item };\n      if (item.id === id) {\n        copyItem.size = event.target.value;\n      }\n      console.log(\"copyItem\", copyItem);\n      copyItems.push(copyItem);\n    });\n    setState({ ...state, items: copyItems });\n  };\n\n  const changeQuantity = (id) => (event) => {\n    console.log(event.target.value);\n    let copyItems = [];\n    state.items.forEach((item) => {\n      let copyItem = { ...item };\n      if (item.id === id) {\n        copyItem.quantity = parseInt(event.target.value);\n      }\n      console.log(\"copyItem\", copyItem);\n      copyItems.push(copyItem);\n    });\n    setState({ ...state, items: copyItems });\n  };\n\n  const addToCart = (id) => () => {\n    let newShoppingCart = [];\n    let itemToAdd = {};\n    state.items.forEach((item) => {\n      if (item.id === id) {\n        itemToAdd = item;\n      }\n    });\n    let isExistingItemInCart = false;\n\n    cart.forEach((item) => {\n      if (item.id === itemToAdd.id && item.size === itemToAdd.size) {\n        itemToAdd.quantity = item.quantity + itemToAdd.quantity;\n        newShoppingCart.push(itemToAdd);\n        isExistingItemInCart = true;\n      } else {\n        newShoppingCart.push(item);\n      }\n    });\n\n    if (!isExistingItemInCart) {\n      newShoppingCart.push(itemToAdd);\n    }\n\n    let copyItems = [];\n    state.items.forEach((item) => {\n      let copyItem = { ...item };\n      if (item.id === id) {\n        copyItem.size = \"\";\n        copyItem.quantity = 0;\n      }\n      copyItems.push(copyItem);\n    });\n\n    setState({ ...state, items: copyItems });\n    setCart(newShoppingCart);\n  };\n\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  const getSubtotal = () => {\n    let subtotal = 0;\n    cart.forEach((item) => {\n      subtotal = subtotal + item.quantity * prices[item.name];\n    });\n    return subtotal;\n  };\n\n  //want to get total quantity for total item in cart\n  const getTotalQuantity = () => {\n    let totalQuantity = 0;\n    cart.forEach((item) => {\n      totalQuantity = item.quantity + totalQuantity;\n    });\n    return totalQuantity;\n  };\n\n  return (\n    <div>\n      <Router>\n        <Route render={() => <Nav getTotalQuantity={getTotalQuantity} />} />\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={() => (\n              <Home\n                listOfItems={state.items}\n                tagVisible={tagVisible}\n                handleTag={handleTag}\n                changeSize={changeSize}\n                changeQuantity={changeQuantity}\n                addToCart={addToCart}\n              />\n            )}\n          />\n\n          <Route path=\"/about\" component={About} />\n\n          <Route\n            path=\"/cart\"\n            exact\n            render={() => (\n              <Cart\n                cart={cart}\n                cartLength={cart.length}\n                getSubtotal={getSubtotal}\n                getTotalQuantity={getTotalQuantity}\n                clearCart={clearCart}\n              />\n            )}\n          />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}